{"map":"{\"version\":3,\"sources\":[\"/Users/rob/Desktop/MyScript/MyProjects/React.DiceGame/src/components/Player/Player.js\",\"/Users/rob/Desktop/MyScript/MyProjects/React.DiceGame/src/components/Dice/Dice.js\",\"/Users/rob/Desktop/MyScript/MyProjects/React.DiceGame/src/components/Msg/Msg.js\",\"/Users/rob/Desktop/MyScript/MyProjects/React.DiceGame/src/components/Game/Game.js\",\"/Users/rob/Desktop/MyScript/MyProjects/React.DiceGame/src/App.js\",\"/Users/rob/Desktop/MyScript/MyProjects/React.DiceGame/src/serviceWorker.js\",\"/Users/rob/Desktop/MyScript/MyProjects/React.DiceGame/src/index.js\"],\"names\":[\"player\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"playerNr\",\"activePlayerClass\",\"playerGameScore\",\"playerMatchScore\",\"dice\",\"bouncEffect\",\"diceClasses\",\"msg\",\"displayClass\",\"theMsg\",\"Game\",\"state\",\"matchScore\",\"activePlayer\",\"winScore\",\"players\",\"playerNumber\",\"activeClass\",\"game\",\"msgDisplayClass\",\"diceBounc\",\"winner\",\"playAgain\",\"mouseMoveX\",\"mouseMoveY\",\"activePlayerHandler\",\"_this\",\"rollTheDiceHandler\",\"setState\",\"diceNumber\",\"Math\",\"floor\",\"random\",\"singleClickButtonHandler\",\"setTimeout\",\"changePlayerHandler\",\"saveGameScore\",\"currentGameScore\",\"document\",\"querySelector\",\"concat\",\"innerHTML\",\"refs\",\"btnRoll\",\"setAttribute\",\"removeAttribute\",\"btnClickEventsHandler\",\"btnPlayAgainHandler\",\"mouseMoveHandler\",\"e\",\"x\",\"clientX\",\"y\",\"clientY\",\"toFixed\",\"this\",\"_this2\",\"onMouseMove\",\"style\",\"transform\",\"Msg_Msg\",\"ref\",\"onClick\",\"map\",\"Player_Player\",\"activePlayerNumber\",\"key\",\"Dice_Dice\",\"Component\",\"App\",\"components_Game_Game\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\n\\nimport './Player.css';\\n\\nconst player = (props) => {\\n    return (\\n            <div className={'Player Player-' + props.playerNr + ' ' + props.activePlayerClass}> \\n                <h2>{props.playerNr}</h2>\\n                <p >Game Score</p>\\n                <p className={'P-' + props.playerNr + '-gameScore'}>{props.playerGameScore}</p>\\n                <p >Match Score</p>\\n                <p className={'P-' + props.playerNr + '-matchScore'}>{props.playerMatchScore}</p>\\n            </div>\\n    )\\n}\\n\\nexport default player;\",\"import React from 'react';\\n\\nimport './Dice.css';\\n\\nconst dice =  (props) => { \\n        return (\\n            <div className={'Dice ' + props.bouncEffect}>\\n                <div className={props.diceClasses}>\\n                    <div className=\\\"cube__face cube__face--front\\\">1</div>\\n                    <div className=\\\"cube__face cube__face--back\\\">2</div>\\n                    <div className=\\\"cube__face cube__face--right\\\">3</div>\\n                    <div className=\\\"cube__face cube__face--left\\\">4</div>\\n                    <div className=\\\"cube__face cube__face--top\\\">5</div>\\n                    <div className=\\\"cube__face cube__face--bottom\\\">6</div>\\n                </div>\\n            </div>\\n        )\\n    };\\n\\nexport default dice;\",\"import React from 'react';\\n\\nimport './Msg.css';\\n\\nconst msg = (props) => {\\n    return (\\n        <div className={'Message ' + props.displayClass} >\\n            <p className='Message__text'>\\n                {props.theMsg}\\n            </p>\\n        </div>\\n    )\\n}\\n\\nexport default msg;\",\"import React, { Component } from 'react';\\n\\nimport Player from '../Player/Player';\\nimport Dice from '../Dice/Dice';\\nimport Msg from '../Msg/Msg';\\nimport './Game.css';\\n\\n\\nclass Game extends Component {\\n    state = {\\n        dice: 0,\\n        matchScore: 0,\\n        activePlayer: 1,\\n        winScore: 50,\\n        players: [\\n            {playerNumber: 1, playerMatchScore: 0, playerGameScore: 0, activeClass:'active-player'},\\n            {playerNumber: 2, playerMatchScore: 0, playerGameScore: 0, activeClass:''}\\n        ],\\n        game: true,\\n        diceClasses: 'cube',\\n        msgDisplayClass: '',\\n        diceBounc: '',\\n        winner: null,\\n        playAgain: '',\\n        mouseMoveX: 'none',\\n        mouseMoveY: 'none'\\n    }\\n\\n    activePlayerHandler = () => {\\n        // Get players array from the stete\\n        const players = this.state.players;\\n\\n        if(this.state.activePlayer === 1){\\n            players[this.state.activePlayer - 1].activeClass = '';\\n            players[this.state.activePlayer].activeClass = 'active-player';\\n        } else {\\n            players[this.state.activePlayer - 2].activeClass = 'active-player';\\n            players[this.state.activePlayer - 1].activeClass = '';\\n        }\\n    }\\n\\n    componentDidUpdate () {\\n        // Updating the match score DOM of an active player\\n        const activePlayer = document.querySelector(`.P-${this.state.activePlayer}-matchScore`);\\n        activePlayer.innerHTML = this.state.players[this.state.activePlayer - 1].playerMatchScore;\\n    }\\n\\n    rollTheDiceHandler = () => {\\n        // Check if the game is false or true and allow or refuse game play\\n        if(this.state.game){\\n            // clear the cube classlist from previous changes\\n            this.setState({diceClasses: 'cube'})\\n                // Generate random number 1-6\\n            const diceNumber = Math.floor((Math.random() * 6 + 1));\\n\\n            // Add the animation to the dice on roll button click\\n            if(diceNumber === 2) {\\n                this.setState({diceClasses: 'cube show-back'})\\n            } else if (diceNumber === 3){\\n                this.setState({diceClasses: 'cube show-right'})\\n            } else if (diceNumber === 4){\\n                this.setState({diceClasses: 'cube show-left'})\\n            } else if (diceNumber === 5){\\n                this.setState({diceClasses: 'cube show-top'})\\n            } else if (diceNumber === 6){\\n                this.setState({diceClasses: 'cube show-bottom'})\\n            }\\n\\n            // Get players array from the stete\\n            const players = this.state.players;\\n            // Check the dive value if its 1 than call handler to change the active player, else add up points for match score\\n            if (diceNumber === 1) {\\n                this.singleClickButtonHandler();\\n                // Add the display class to the msg component so that the message would show that 1 was rolled\\n                this.setState({msgDisplayClass: 'DisplayRoll'});\\n                setTimeout(()=> {\\n                    this.setState({msgDisplayClass: ''});\\n                }, 1000);\\n                // Call handler to change the active player\\n                this.changePlayerHandler();\\n                // Call handler to change the DOM of an active player\\n                this.activePlayerHandler();\\n            } else {\\n                // Set the dice value inside the state;\\n                this.setState({\\n                    dice: diceNumber,\\n                    matchScore: diceNumber === 1 ? 0 : this.state.matchScore + diceNumber\\n                });\\n                \\n                // Display the match score of an active player\\n                players[this.state.activePlayer - 1].playerMatchScore = this.state.matchScore + diceNumber;\\n            }\\n\\n            // If rolled the same dice number twice put effect on a dice to show that\\n            const oldDice = this.state.dice;\\n            if(oldDice === diceNumber){\\n                this.setState({diceBounc: 'bounc'})\\n                setTimeout(() => {\\n                    this.setState({diceBounc: ''})\\n                }, 700);\\n            }   \\n        }\\n    }\\n\\n    saveGameScore = () => {\\n        if(this.state.game){\\n            const activePlayer = document.querySelector(`.P-${this.state.activePlayer}-gameScore`);\\n            const currentGameScore = activePlayer.innerHTML;\\n\\n            const players = this.state.players;\\n            players[this.state.activePlayer - 1].playerGameScore = +currentGameScore + this.state.matchScore;\\n\\n            // Check if the game score of an active player is winning or not\\n            if(players[this.state.activePlayer - 1].playerGameScore >= this.state.winScore){\\n\\n                // Display the msg with the winner of the game\\n                this.setState({winner: `Player ${players[this.state.activePlayer - 1].playerNumber} has won the game!`});\\n                // Display Play Again button\\n                this.setState({playAgain: 'playAgain'});\\n\\n                // Stop game after the winning score was reached\\n                this.setState({game: false});\\n            }\\n\\n            // Call handler to change the active player\\n            this.changePlayerHandler();\\n            // Call handler to change the DOM of an active player\\n            this.activePlayerHandler();\\n        }\\n    }\\n\\n    changePlayerHandler = () => {\\n        this.setState({\\n            dice: 0,\\n            matchScore: 0,\\n            activePlayer: this.state.activePlayer === 1 ? 2 : 1,\\n        });\\n\\n        const players = this.state.players;\\n        players[this.state.activePlayer - 1].playerMatchScore = 0;\\n    }\\n\\n    // Disable button Roll after click for short time to prevent multiple clicks\\n    singleClickButtonHandler = () => {\\n        this.refs.btnRoll.setAttribute(\\\"disabled\\\", \\\"disabled\\\");\\n        setTimeout(( ) => {\\n            this.refs.btnRoll.removeAttribute(\\\"disabled\\\");\\n        }, 1000);\\n    }\\n\\n    // Call multiple events on one btn click\\n    btnClickEventsHandler = () => {\\n        this.singleClickButtonHandler();\\n        this.rollTheDiceHandler();\\n    }\\n\\n    // Play Again button reset the game\\n    btnPlayAgainHandler = () => {\\n        this.setState({\\n            dice: 0,\\n            matchScore: 0,\\n            activePlayer: 1,\\n            players: [\\n                {playerNumber: 1, playerMatchScore: 0, playerGameScore: 0, activeClass:'active-player'},\\n                {playerNumber: 2, playerMatchScore: 0, playerGameScore: 0, activeClass:''}\\n            ],\\n            diceClasses: 'cube',\\n            game: true,\\n            winner: null,\\n            playAgain: ''\\n        })\\n    }\\n\\n    // THE MOUSE MOVE ROTATE GAME DIV FUNCTION\\n    mouseMoveHandler = (e) => {\\n        let x = e.clientX / 100;\\n        let y = e.clientY / 100;\\n        if(x < 6){\\n            x = (-(6 - x)) - 0.8;\\n        } else {\\n            x = x - 5;\\n        }\\n        if(y < 6){\\n            y = (-(6 - y)) - 0.8;\\n        } else {\\n            y = (y - 5) + 1.8;\\n        }\\n        this.setState({mouseMoveX: x.toFixed(1), mouseMoveY: y.toFixed(1)});\\n\\n    }\\n\\n    render () {\\n        const players = this.state.players;\\n\\n        return (\\n            \\n            <div\\n                onMouseMove={this.mouseMoveHandler} \\n                style={{transform: `rotateY(${this.state.mouseMoveX}deg) rotateX(${this.state.mouseMoveY}deg)`}}\\n                className='Game'>\\n            <Msg displayClass={this.state.msgDisplayClass} theMsg='Rolled ONE!'/>\\n                <div className=\\\"score-container\\\">\\n                    <p className=\\\"score\\\">{this.state.dice}</p>\\n                    <button \\n                        className='btn btn-roll'\\n                        ref='btnRoll' \\n                        onClick={this.btnClickEventsHandler}>Roll</button>\\n                    <button \\n                        className='btn btn-save'\\n                        onClick={this.saveGameScore}>Save</button>\\n                </div>\\n                <div className='Players'>\\n                <div className='winScore-container'> \\n                    <p >Win Score</p>\\n                    <p >{this.state.winScore}</p>\\n                </div>\\n                    {players.map(player => {\\n                        return (\\n                            <Player \\n                            activePlayerClass={player.activeClass}\\n                            activePlayerNumber={this.state.activePlayer}\\n                            key={player.playerNumber}\\n                            playerNr={player.playerNumber}\\n                            playerMatchScore={player.playerMatchScore}\\n                            playerGameScore={player.playerGameScore}/>\\n                        )\\n                    })}\\n                </div>\\n                <Dice diceClasses={this.state.diceClasses} bouncEffect={this.state.diceBounc}/>\\n                <h1 className='msg-play-again'>{this.state.winner}</h1>\\n                <button onClick={this.btnPlayAgainHandler} className={`btn btnPlayAgain ` + this.state.playAgain}>Play again</button>\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default Game;\",\"import React, { Component } from 'react';\\n\\nimport Game from './components/Game/Game';\\nimport './App.css';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n          <Game />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,function(e,a,t){e.exports=t(25)},,,,,function(e,a,t){},,function(e,a,t){},,function(e,a,t){},,function(e,a,t){},,function(e,a,t){},,function(e,a,t){},,function(e,a,t){\"use strict\";t.r(a);var c=t(0),s=t.n(c),l=t(7),r=t.n(l),n=(t(13),t(1)),i=t(2),o=t(4),m=t(3),u=t(5),y=(t(15),function(e){return s.a.createElement(\"div\",{className:\"Player Player-\"+e.playerNr+\" \"+e.activePlayerClass},s.a.createElement(\"h2\",null,e.playerNr),s.a.createElement(\"p\",null,\"Game Score\"),s.a.createElement(\"p\",{className:\"P-\"+e.playerNr+\"-gameScore\"},e.playerGameScore),s.a.createElement(\"p\",null,\"Match Score\"),s.a.createElement(\"p\",{className:\"P-\"+e.playerNr+\"-matchScore\"},e.playerMatchScore))}),v=(t(17),function(e){return s.a.createElement(\"div\",{className:\"Dice \"+e.bouncEffect},s.a.createElement(\"div\",{className:e.diceClasses},s.a.createElement(\"div\",{className:\"cube__face cube__face--front\"},\"1\"),s.a.createElement(\"div\",{className:\"cube__face cube__face--back\"},\"2\"),s.a.createElement(\"div\",{className:\"cube__face cube__face--right\"},\"3\"),s.a.createElement(\"div\",{className:\"cube__face cube__face--left\"},\"4\"),s.a.createElement(\"div\",{className:\"cube__face cube__face--top\"},\"5\"),s.a.createElement(\"div\",{className:\"cube__face cube__face--bottom\"},\"6\")))}),p=(t(19),function(e){return s.a.createElement(\"div\",{className:\"Message \"+e.displayClass},s.a.createElement(\"p\",{className:\"Message__text\"},e.theMsg))}),d=(t(21),function(e){function a(){var e,t;Object(n.a)(this,a);for(var c=arguments.length,s=new Array(c),l=0;l<c;l++)s[l]=arguments[l];return(t=Object(o.a)(this,(e=Object(m.a)(a)).call.apply(e,[this].concat(s)))).state={dice:0,matchScore:0,activePlayer:1,winScore:50,players:[{playerNumber:1,playerMatchScore:0,playerGameScore:0,activeClass:\"active-player\"},{playerNumber:2,playerMatchScore:0,playerGameScore:0,activeClass:\"\"}],game:!0,diceClasses:\"cube\",msgDisplayClass:\"\",diceBounc:\"\",winner:null,playAgain:\"\",mouseMoveX:\"none\",mouseMoveY:\"none\"},t.activePlayerHandler=function(){var e=t.state.players;1===t.state.activePlayer?(e[t.state.activePlayer-1].activeClass=\"\",e[t.state.activePlayer].activeClass=\"active-player\"):(e[t.state.activePlayer-2].activeClass=\"active-player\",e[t.state.activePlayer-1].activeClass=\"\")},t.rollTheDiceHandler=function(){if(t.state.game){t.setState({diceClasses:\"cube\"});var e=Math.floor(6*Math.random()+1);2===e?t.setState({diceClasses:\"cube show-back\"}):3===e?t.setState({diceClasses:\"cube show-right\"}):4===e?t.setState({diceClasses:\"cube show-left\"}):5===e?t.setState({diceClasses:\"cube show-top\"}):6===e&&t.setState({diceClasses:\"cube show-bottom\"});var a=t.state.players;1===e?(t.singleClickButtonHandler(),t.setState({msgDisplayClass:\"DisplayRoll\"}),setTimeout(function(){t.setState({msgDisplayClass:\"\"})},1e3),t.changePlayerHandler(),t.activePlayerHandler()):(t.setState({dice:e,matchScore:1===e?0:t.state.matchScore+e}),a[t.state.activePlayer-1].playerMatchScore=t.state.matchScore+e),t.state.dice===e&&(t.setState({diceBounc:\"bounc\"}),setTimeout(function(){t.setState({diceBounc:\"\"})},700))}},t.saveGameScore=function(){if(t.state.game){var e=document.querySelector(\".P-\".concat(t.state.activePlayer,\"-gameScore\")).innerHTML,a=t.state.players;a[t.state.activePlayer-1].playerGameScore=+e+t.state.matchScore,a[t.state.activePlayer-1].playerGameScore>=t.state.winScore&&(t.setState({winner:\"Player \".concat(a[t.state.activePlayer-1].playerNumber,\" has won the game!\")}),t.setState({playAgain:\"playAgain\"}),t.setState({game:!1})),t.changePlayerHandler(),t.activePlayerHandler()}},t.changePlayerHandler=function(){t.setState({dice:0,matchScore:0,activePlayer:1===t.state.activePlayer?2:1}),t.state.players[t.state.activePlayer-1].playerMatchScore=0},t.singleClickButtonHandler=function(){t.refs.btnRoll.setAttribute(\"disabled\",\"disabled\"),setTimeout(function(){t.refs.btnRoll.removeAttribute(\"disabled\")},1e3)},t.btnClickEventsHandler=function(){t.singleClickButtonHandler(),t.rollTheDiceHandler()},t.btnPlayAgainHandler=function(){t.setState({dice:0,matchScore:0,activePlayer:1,players:[{playerNumber:1,playerMatchScore:0,playerGameScore:0,activeClass:\"active-player\"},{playerNumber:2,playerMatchScore:0,playerGameScore:0,activeClass:\"\"}],diceClasses:\"cube\",game:!0,winner:null,playAgain:\"\"})},t.mouseMoveHandler=function(e){var a=e.clientX/100,c=e.clientY/100;a<6?a=-(6-a)-.8:a-=5,c=c<6?-(6-c)-.8:c-5+1.8,t.setState({mouseMoveX:a.toFixed(1),mouseMoveY:c.toFixed(1)})},t}return Object(u.a)(a,e),Object(i.a)(a,[{key:\"componentDidUpdate\",value:function(){document.querySelector(\".P-\".concat(this.state.activePlayer,\"-matchScore\")).innerHTML=this.state.players[this.state.activePlayer-1].playerMatchScore}},{key:\"render\",value:function(){var e=this,a=this.state.players;return s.a.createElement(\"div\",{onMouseMove:this.mouseMoveHandler,style:{transform:\"rotateY(\".concat(this.state.mouseMoveX,\"deg) rotateX(\").concat(this.state.mouseMoveY,\"deg)\")},className:\"Game\"},s.a.createElement(p,{displayClass:this.state.msgDisplayClass,theMsg:\"Rolled ONE!\"}),s.a.createElement(\"div\",{className:\"score-container\"},s.a.createElement(\"p\",{className:\"score\"},this.state.dice),s.a.createElement(\"button\",{className:\"btn btn-roll\",ref:\"btnRoll\",onClick:this.btnClickEventsHandler},\"Roll\"),s.a.createElement(\"button\",{className:\"btn btn-save\",onClick:this.saveGameScore},\"Save\")),s.a.createElement(\"div\",{className:\"Players\"},s.a.createElement(\"div\",{className:\"winScore-container\"},s.a.createElement(\"p\",null,\"Win Score\"),s.a.createElement(\"p\",null,this.state.winScore)),a.map(function(a){return s.a.createElement(y,{activePlayerClass:a.activeClass,activePlayerNumber:e.state.activePlayer,key:a.playerNumber,playerNr:a.playerNumber,playerMatchScore:a.playerMatchScore,playerGameScore:a.playerGameScore})})),s.a.createElement(v,{diceClasses:this.state.diceClasses,bouncEffect:this.state.diceBounc}),s.a.createElement(\"h1\",{className:\"msg-play-again\"},this.state.winner),s.a.createElement(\"button\",{onClick:this.btnPlayAgainHandler,className:\"btn btnPlayAgain \"+this.state.playAgain},\"Play again\"))}}]),a}(c.Component)),h=(t(23),function(e){function a(){return Object(n.a)(this,a),Object(o.a)(this,Object(m.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(i.a)(a,[{key:\"render\",value:function(){return s.a.createElement(\"div\",{className:\"App\"},s.a.createElement(d,null))}}]),a}(c.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(s.a.createElement(h,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[8,2,1]]]);","extractedComments":[]}